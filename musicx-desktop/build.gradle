plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
  id 'de.jjohannes.extra-java-module-info' version "0.16"
}

group 'fr.xahla'
version '0.5.0'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.0'
}

/* jar {
    manifest {
        attributes 'Main-Class': 'fr.xahla.musicx.desktop.RunnableMain'
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
} */

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'fr.xahla.musicx.desktop'
  mainClass = 'fr.xahla.musicx.desktop.DesktopApplication'
}

javafx {
  version = '21'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web']
}

dependencies {
    implementation project(":musicx-api")
    implementation project(":musicx-domain")

    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
      exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-fluentui-pack:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:11.48') {
      exclude(group: 'org.openjfx')
    }

    implementation('org.rationalityfrontline.workaround:jfoenix:21.0.0')

    // JSON
    implementation('org.json:json:20240303')

    // JetBrains
    implementation 'org.jetbrains:annotations:24.1.0'

    implementation('io.github.mkpaz:atlantafx-base:2.0.1')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

extraJavaModuleInfo {
    module("jaudiotagger-3.0.1.jar", "jaudiotagger", "3.0.1") {
        requires("java.logging")

        exports("org.jaudiotagger.audio")
        exports("org.jaudiotagger.tag")
        exports("org.jaudiotagger.tag.id3")
        exports("org.jaudiotagger.tag.mp4")
        exports("org.jaudiotagger.tag.mp4.field")
    }

    module("javatuples-3.0.jar", "javatuples", "3.0") {
        exports("org.javatuples")
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            '--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls'
    ]
}

run {
    jvmArgs += [
            '--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls'
    ]
}